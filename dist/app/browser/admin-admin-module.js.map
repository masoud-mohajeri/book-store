{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/offers/offer-item/offer-item.component.html","./src/app/admin/offers/offers.component.html","./src/app/admin/all-order-history/all-order-history.component.html","./src/app/admin/offers/offer-item/offer-item.component.ts","./src/app/admin/all-order-history/all-order-history.component.scss","./src/app/admin/offers/offers.component.scss","./src/app/admin/publisher-card/publisher-card.component.html","./src/app/admin/publisher-card/publisher-card.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/all-order-history/all-order-history.component.ts","./src/app/admin/admin.page.html","./src/app/shared/services/publishers.service.ts","./src/app/admin/publisher-card/publisher-card.component.scss","./src/app/admin/offers/offers.component.ts","./src/app/admin/offers/offer-item/offer-item.component.scss","./src/app/admin/admin.page.scss","./src/app/admin/admin.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;AChBnC;AAAe,gMAAiI,wKAAwK,aAAa,+EAA+E,E;;;;;;;;;;;;ACApZ;AAAe,gmDAAiiD,aAAa,GAAG,kBAAkB,i3CAAi3C,4CAA4C,yNAAyN,aAAa,sKAAsK,2UAA2U,E;;;;;;;;;;;;ACAtsH;AAAe,+OAAgL,kBAAkB,+CAA+C,aAAa,mEAAmE,eAAe,oDAAoD,4BAA4B,8CAA8C,E;;;;;;;;;;;;;;;;;;;;;;ACApa;AAGW;IAOvD,kBAAkB,SAAlB,kBAAkB;IAG7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAD5C,UAAK,GAAW,EAAE,CAAC;IAC4B,CAAC;IAEhD,QAAQ;QACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;gBAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,uEAAuE;SACxE;IACH,CAAC;CACF;;YArBQ,iFAAW;;;sBAQjB,mDAAK;;AADK,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAc9B;AAd8B;;;;;;;;;;;;;ACV/B;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;ACApM;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAe,iLAAkH,kBAAkB,mlBAAmlB,kBAAkB,67CAA67C,4CAA4C,wOAAwO,aAAa,kFAAkF,2nBAA2nB,qBAAqB,kKAAkK,E;;;;;;;;;;;;;;;;;;;;;;;;ACAjyG;AAEW;AACW;AAChB;IAQlD,sBAAsB,SAAtB,sBAAsB;IAMjC,YACU,WAAwB,EACxB,SAAoB,EACpB,gBAAmC;QAFnC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,qBAAgB,GAAhB,gBAAgB,CAAmB;QAN7C,aAAQ,GAAG,KAAK,CAAC;QACjB,gBAAW,GAAG,CAAC,CAAC;IAMb,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC5C,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0CAA0C,CAAC,CAAC;YACxE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CACzC,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAC/B,IAAI,CAAC,SAAS,CAAC,EAAE,CAClB,CAAC;IACJ,CAAC;IACD,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;CACF;;YA7CQ,iFAAW;YAEX,4EAAS;YADT,4FAAiB;;;wBAUvB,mDAAK;;AADK,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2FAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAmClC;AAnCkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACM;AACmB;AAErB;AACQ;AAEW;AAEvB;AAC0C;AACvB;AACkB;AAEa;IAoB9E,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAlB3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4EAAsB;YACtB,kEAAmB;YACnB,kEAAmB;YACnB,kEAAmB;SACpB;QACD,YAAY,EAAE;YACZ,qDAAS;YACT,+FAAsB;YACtB,wEAAe;YACf,2FAAkB;YAClB,wGAAwB;SACzB;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AClC6B;AAGU;AACC;AACW;IAQlE,wBAAwB,SAAxB,wBAAwB;IAInC,YACU,gBAAmC,EACnC,YAAyB,EACzB,WAAwB;QAFxB,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,iBAAY,GAAZ,YAAY,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QAJlC,gBAAW,GAAG,IAAI,CAAC;IAKhB,CAAC;IAEJ,QAAQ;QACN,2BAA2B;QAC3B,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACrE,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAU,EAAE,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA7BQ,4FAAiB;YADjB,iFAAW;YADX,gFAAW;;;oBAWjB,mDAAK;;AADK,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,8FAAiD;;KAElD,CAAC;GACW,wBAAwB,CAqBpC;AArBoC;;;;;;;;;;;;;ACbrC;AAAe,g/CAAi7C,6CAA6C,mHAAmH,gTAAgT,E;;;;;;;;;;;;;;;;;;;;ACAr2D;AACgB;AACpB;AAEE;IAG5B,iBAAiB,SAAjB,iBAAiB;IAI5B,YAAoB,GAAqB,EAAU,SAAoB;QAAnD,QAAG,GAAH,GAAG,CAAkB;QAAU,cAAS,GAAT,SAAS,CAAW;QAHvE,eAAU,GAAW,EAAE,CAAC;QACxB,qBAAgB,GAAG,IAAI,oDAAe,CAAS,IAAI,CAAC,CAAC;IAEqB,CAAC;IAE3E,gBAAgB;QACd,OAAO,IAAI,CAAC,GAAG;aACZ,UAAU,CAAO,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;aACzE,YAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,qBAAqB,CAAC,MAAe,EAAE,KAAa;QAClD,IAAI,CAAC,GAAG;aACL,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;aACpB,MAAM,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC;aACnC,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;aACzD;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,sCAAsC,CAAC,CAAC;YACpE,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,GAAW;QAC7B,iEAAiE;QACjE,iCAAiC;QACjC,OAAO,IAAI,CAAC,GAAG;aACZ,UAAU,CAAO,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAChC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAChE;aACA,YAAY,EAAE,CAAC;IACpB,CAAC;CACF;;YA5CQ,wEAAgB;YAGhB,qDAAS;;AAGL,iBAAiB;IAD7B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,iBAAiB,CAsC7B;AAtC6B;;;;;;;;;;;;;ACP9B;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnI;AACO;AACjB;AACH;AAGoB;AACM;AACX;IAOlD,eAAe,SAAf,eAAe;IAW1B,YACU,eAAgC,EAChC,WAAwB,EACxB,SAAoB,EACpB,iBAAoC;QAHpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAZ9C,SAAI,GAAmB,EAAE,CAAC;QAC1B,gBAAW,GAAG,CAAC,CAAC;QAGhB,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAY,IAAI,CAAC;IAQ3B,CAAC;IAEJ,QAAQ;;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CACtC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0CAA0C,CAAC,CAAC;YACxE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CACF,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,+CAAU,CAAY,CAAC,IAAI,EAAE,EAAE;YACjD,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,EAAE,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,IAAI,0DAAW,OAAC,IAAI,CAAC,aAAa,0CAAE,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpE,QAAQ,EAAE,IAAI,0DAAW,OACvB,IAAI,CAAC,aAAa,0CAAE,QAAQ,EAC5B,yDAAU,CAAC,QAAQ,CACpB;YACD,WAAW,EAAE,IAAI,0DAAW,OAC1B,IAAI,CAAC,aAAa,0CAAE,WAAW,EAC/B,yDAAU,CAAC,QAAQ,CACpB;YACD,WAAW,EAAE,IAAI,0DAAW,OAC1B,IAAI,CAAC,aAAa,0CAAE,WAAW,EAC/B,yDAAU,CAAC,QAAQ,CACpB;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,GAAW;QAClB,IAAI,CAAC,iBAAiB;aACnB,MAAM,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;aACxC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,GAAG,CAAC,OAAO,EAAE,CAAC;YAEd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,eAAe;iBACjB,iBAAiB,CAAC,GAAG,CAAC;iBACtB,IAAI,CAAC,CAAC,CAAU,EAAE,EAAE;gBACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvB,mCAAmC;gBACnC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;oBACxB,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE;oBACzB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;oBAC7B,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;oBACrC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW;oBAC3C,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW;iBAC5C,CAAC,CAAC;gBACH,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,sBAAsB;gBACtB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,iBAAiB;aACnB,MAAM,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;aACxC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,GAAG,CAAC,OAAO,EAAE,CAAC;YAEd,IAAI,CAAC,eAAe;iBACjB,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;iBACzD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;gBACvD,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;gBACxD,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAChD,CAAC;CACF;;YAvIQ,uFAAe;YADf,iFAAW;YAEX,4EAAS;YANT,gEAAiB;;AAab,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;GACW,eAAe,CA+H3B;AA/H2B;;;;;;;;;;;;;ACf5B;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L;AAAe,6GAA8C,mHAAmH,E;;;;;;;;;;;;;;;;;;;;;;;;ACAnH;AAGiB;AACJ;AAChB;IAQ7C,SAAS,SAAT,SAAS;IAOpB,UAAU;IACV,YACU,iBAAoC,EACpC,eAAoC,EACpC,SAAoB;QAFpB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAqB;QACpC,cAAS,GAAT,SAAS,CAAW;QAV9B,cAAS,GAAG,QAAQ,CAAC;QACrB,kBAAa,GAAmB,EAAE,CAAC;QAEnC,gBAAW,GAAG,IAAI,CAAC;QACnB,WAAM,GAAY,EAAE,CAAC;QACrB,gBAAW,GAAG,CAAC,CAAC;IAMb,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CACjD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wCAAwC,CAAC,CAAC;YACtE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CACF,CACF,CAAC;QAEF,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,KAAc,EAAE,EAAE;gBAC/D,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAc,EAAE,EAAE;YACzB,sBAAsB;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACjC,GAAG,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAxDQ,qFAAiB;YADjB,yFAAmB;YAEnB,qEAAS;;AAQL,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6EAAgC;;KAEjC,CAAC;GACW,SAAS,CA+CrB;AA/CqB","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminPage } from './admin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminPageRoutingModule {}\n","export default \"<ion-item>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item\\n      *ngFor=\\\"let book of books\\\"\\n      style=\\\"display: inline-block; direction: rtl\\\"\\n    >\\n      <ion-chip color=\\\"dark\\\">\\n        <ion-avatar>\\n          <img [src]=\\\"book.imageUrl\\\" />\\n        </ion-avatar>\\n        <ion-label>{{ book.name }}</ion-label>\\n      </ion-chip>\\n    </ion-item>\\n  </ion-list>\\n</ion-item>\\n\";","export default \"<ion-grid fixed>\\n  <ion-row>\\n    <ion-col sizeMd=\\\"5\\\" size=\\\"12\\\" offsetMd=\\\"3\\\">\\n      <form [formGroup]=\\\"packageForm\\\" #pform>\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" slot=\\\"end\\\"> : شناسه </ion-label>\\n          <ion-input\\n            style=\\\"direction: rtl\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"id\\\"\\n            readonly\\n          >\\n          </ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" slot=\\\"end\\\"> : نام </ion-label>\\n          <ion-input style=\\\"direction: rtl\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n          </ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" slot=\\\"end\\\"> : عکس </ion-label>\\n          <ion-input\\n            style=\\\"direction: rtl\\\"\\n            type=\\\"file\\\"\\n            formControlName=\\\"imageUrl\\\"\\n            (change)=\\\"uploadFile($event)\\\"\\n          >\\n          </ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" slot=\\\"end\\\"> : توضیحات </ion-label>\\n          <ion-textarea style=\\\"direction: rtl\\\" formControlName=\\\"description\\\">\\n          </ion-textarea>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label slot=\\\"end\\\">کتاب ها</ion-label>\\n          <ion-select\\n            style=\\\"direction: rtl\\\"\\n            formControlName=\\\"bookIdArray\\\"\\n            multiple=\\\"true\\\"\\n            okText=\\\"Okay!\\\"\\n          >\\n            <ion-select-option *ngFor=\\\"let book of books\\\" [value]=\\\"book.id\\\">\\n              {{ book.name }}-{{ book.publisher }}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <ion-button\\n          (click)=\\\"onClearButton()\\\"\\n          fill=\\\"solid\\\"\\n          color=\\\"warning\\\"\\n          type=\\\"button\\\"\\n        >\\n          پاک کردن\\n        </ion-button>\\n        <ion-button\\n          *ngIf=\\\"!editMode\\\"\\n          (click)=\\\"onAddButton()\\\"\\n          fill=\\\"solid\\\"\\n          color=\\\"success\\\"\\n          type=\\\"button\\\"\\n        >\\n          اضافه کردن\\n        </ion-button>\\n        <ion-button\\n          *ngIf=\\\"editMode\\\"\\n          (click)=\\\"onUpdateButton()\\\"\\n          fill=\\\"solid\\\"\\n          color=\\\"success\\\"\\n          type=\\\"button\\\"\\n        >\\n          آپدیت کردن\\n        </ion-button>\\n        <ion-button\\n          *ngIf=\\\"editMode\\\"\\n          (click)=\\\"onDeleteButton()\\\"\\n          fill=\\\"solid\\\"\\n          color=\\\"danger\\\"\\n          type=\\\"button\\\"\\n        >\\n          حذف کردن\\n        </ion-button>\\n      </form>\\n    </ion-col>\\n    <ion-col sizeMd=\\\"2\\\" size=\\\"6\\\" offset=\\\"3\\\" offsetMd=\\\"0\\\">\\n      <ion-img [src]=\\\"onEditPackage?.imageUrl\\\" alt=\\\"image !!!!!!!!!!\\\"></ion-img>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col sizeMd=\\\"6\\\" size=\\\"12\\\" offsetMd=\\\"3\\\">\\n      <ion-list style=\\\"direction: rtl\\\">\\n        <section\\n          *ngFor=\\\"\\n            let pack of packages | async\\n              | paginate: { itemsPerPage: 5, currentPage: paginationP }\\n          \\\"\\n        >\\n          <ion-button\\n            (click)=\\\"editPack(pack.id)\\\"\\n            fill=\\\"outline\\\"\\n            expand=\\\"block\\\"\\n            color=\\\"medium\\\"\\n          >\\n            ویرایش {{ pack.name }} 👇\\n          </ion-button>\\n          <app-offer-item [package]=\\\"pack\\\"></app-offer-item>\\n        </section>\\n      </ion-list>\\n      <div style=\\\"display: flex; justify-content: center\\\">\\n        <pagination-controls\\n          (pageChange)=\\\"paginationP = $event\\\"\\n          previousLabel=\\\" \\\"\\n          nextLabel=\\\" \\\"\\n          [autoHide]=\\\"true\\\"\\n          [responsive]=\\\"true\\\"\\n        >\\n        </pagination-controls>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-spinner *ngIf=\\\"needSpinner\\\" name=\\\"dots\\\"></ion-spinner>\\n<ion-grid *ngIf=\\\"!needSpinner\\\" style=\\\"direction: rtl\\\" fixed>\\n  <ion-row>\\n    <ion-col size=\\\"3\\\"> نشر {{ book.publisher }} </ion-col>\\n    <ion-col size=\\\"3\\\">\\n      {{ book.name }}\\n    </ion-col>\\n    <ion-col size=\\\"3\\\">\\n      تعداد :\\n      {{ order.count }}\\n    </ion-col>\\n    <ion-col size=\\\"3\\\">\\n      {{ order.paymentDate | date }}\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Book } from 'src/app/shared/book.model';\nimport { Package } from 'src/app/shared/package.model';\nimport { BookService } from 'src/app/shared/services/books.service';\n\n@Component({\n  selector: 'app-offer-item',\n  templateUrl: './offer-item.component.html',\n  styleUrls: ['./offer-item.component.scss'],\n})\nexport class OfferItemComponent implements OnInit {\n  @Input() package: Package;\n  books: Book[] = [];\n  constructor(private bookService: BookService) {}\n\n  ngOnInit() {\n    for (const bookId of this.package.bookIdArray) {\n      this.bookService.returnBookById(bookId).subscribe((book: Book) => {\n        this.books.push(book);\n      });\n\n      // this.books.push(this.bookService.returnBookById(bookId.toString()));\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGwtb3JkZXItaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvZmZlcnMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-item>\\n  <ion-label style=\\\"direction: rtl\\\">\\n    <section *ngIf=\\\"!expanded\\\">\\n      <h2>\\n        نشر {{ publisher.name }}\\n        <ion-icon\\n          *ngIf=\\\"publisher.activatedStatus\\\"\\n          name=\\\"cloud-done\\\"\\n          color=\\\"success\\\"\\n          style=\\\"font-size: 1.5rem\\\"\\n        ></ion-icon>\\n        <ion-icon\\n          *ngIf=\\\"!publisher.activatedStatus\\\"\\n          name=\\\"cloud-offline\\\"\\n          color=\\\"danger\\\"\\n          style=\\\"font-size: 1.5rem\\\"\\n        ></ion-icon>\\n      </h2>\\n\\n      <ion-button (click)=\\\"expandCollaps()\\\" color=\\\"tertiary\\\" fill=\\\"solid\\\">\\n        نمایش جزئیات\\n      </ion-button>\\n    </section>\\n    <section *ngIf=\\\"expanded\\\">\\n      <h1>\\n        نشر {{ publisher.name }}\\n\\n        <ion-icon\\n          *ngIf=\\\"publisher.activatedStatus\\\"\\n          name=\\\"cloud-done\\\"\\n          color=\\\"success\\\"\\n          style=\\\"font-size: 1.8rem\\\"\\n        ></ion-icon>\\n        <ion-icon\\n          *ngIf=\\\"!publisher.activatedStatus\\\"\\n          name=\\\"cloud-offline\\\"\\n          color=\\\"danger\\\"\\n          style=\\\"font-size: 1.8rem\\\"\\n        ></ion-icon>\\n      </h1>\\n\\n      <ion-button (click)=\\\"expandCollaps()\\\" color=\\\"tertiary\\\" fill=\\\"solid\\\">\\n        عدم نمایش جزئیات\\n      </ion-button>\\n      <ion-button\\n        *ngIf=\\\"!publisher.activatedStatus\\\"\\n        (click)=\\\"changePublisherStatus()\\\"\\n        color=\\\"success\\\"\\n        fill=\\\"outline\\\"\\n        shape=\\\"round\\\"\\n      >\\n        فعال کردن\\n      </ion-button>\\n      <ion-button\\n        *ngIf=\\\"publisher.activatedStatus\\\"\\n        (click)=\\\"changePublisherStatus()\\\"\\n        color=\\\"danger\\\"\\n        fill=\\\"outline\\\"\\n        shape=\\\"round\\\"\\n      >\\n        مسدود کردن\\n      </ion-button>\\n\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"10\\\" offsetMd=\\\"1\\\" offset=\\\"0\\\">\\n            <ion-list lines=\\\"none\\\" inset=\\\"true\\\">\\n              <ion-header>\\n                <ion-toolbar>\\n                  <ion-title>کتاب های نشر</ion-title>\\n                </ion-toolbar>\\n              </ion-header>\\n              <ion-item\\n                *ngFor=\\\"\\n                  let book of books\\n                    | paginate: { itemsPerPage: 5, currentPage: paginationP }\\n                \\\"\\n              >\\n                <ion-avatar slot=\\\"start\\\">\\n                  <ion-img [src]=\\\"book.imageUrl\\\"></ion-img>\\n                </ion-avatar>\\n                <ion-label style=\\\"direction: rtl\\\">{{ book.name }}</ion-label>\\n              </ion-item>\\n              <div style=\\\"display: flex; justify-content: center\\\">\\n                <pagination-controls\\n                  (pageChange)=\\\"paginationP = $event\\\"\\n                  previousLabel=\\\" \\\"\\n                  nextLabel=\\\" \\\"\\n                  [autoHide]=\\\"true\\\"\\n                  [responsive]=\\\"true\\\"\\n                >\\n                </pagination-controls>\\n              </div>\\n            </ion-list>\\n            <ion-header>\\n              <ion-toolbar>\\n                <ion-title>آدرس </ion-title>\\n              </ion-toolbar>\\n            </ion-header>\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">\\n                {{ publisher.address }}\\n              </ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </section>\\n  </ion-label>\\n</ion-item>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Book } from 'src/app/shared/book.model';\nimport { BookService } from 'src/app/shared/services/books.service';\nimport { PublishersService } from 'src/app/shared/services/publishers.service';\nimport { UIService } from 'src/app/shared/services/ui.service';\nimport { User } from 'src/app/shared/user.model';\n\n@Component({\n  selector: 'app-publisher-card',\n  templateUrl: './publisher-card.component.html',\n  styleUrls: ['./publisher-card.component.scss'],\n})\nexport class PublisherCardComponent implements OnInit {\n  @Input() publisher: User;\n  books: Book[];\n  expanded = false;\n  paginationP = 1;\n\n  constructor(\n    private bookService: BookService,\n    private uiService: UIService,\n    private publisherService: PublishersService\n  ) {}\n\n  ngOnInit() {\n    this.uiService.needSpinner.next(true);\n    this.bookService.getAllBooksForPub().subscribe(\n      (someBook) => {\n        this.uiService.needSpinner.next(false);\n        this.books = someBook;\n      },\n      (error) => {\n        this.uiService.needSpinner.next(false);\n        this.uiService.presentToast('مشکلی در دریافت لیست کتاب ها وجود دارد .');\n        throw new Error(error);\n      }\n    );\n  }\n  changePublisherStatus() {\n    this.publisherService.changePublisherStatus(\n      !this.publisher.activatedStatus,\n      this.publisher.id\n    );\n  }\n  expandCollaps() {\n    this.expanded = !this.expanded;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { AdminPageRoutingModule } from './admin-routing.module';\n\nimport { AdminPage } from './admin.page';\nimport { PublisherCardComponent } from './publisher-card/publisher-card.component';\nimport { OffersComponent } from './offers/offers.component';\nimport { OfferItemComponent } from './offers/offer-item/offer-item.component';\nimport { OrderHistoryComponent } from '../customer/order-history/order-history.component';\nimport { AllOrderHistoryComponent } from './all-order-history/all-order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminPageRoutingModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ],\n  declarations: [\n    AdminPage,\n    PublisherCardComponent,\n    OffersComponent,\n    OfferItemComponent,\n    AllOrderHistoryComponent,\n  ],\n})\nexport class AdminPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Book } from 'src/app/shared/book.model';\nimport { Order } from 'src/app/shared/order.model';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { BookService } from 'src/app/shared/services/books.service';\nimport { PublishersService } from 'src/app/shared/services/publishers.service';\nimport { User } from 'src/app/shared/user.model';\n\n@Component({\n  selector: 'app-all-order-history',\n  templateUrl: './all-order-history.component.html',\n  styleUrls: ['./all-order-history.component.scss'],\n})\nexport class AllOrderHistoryComponent implements OnInit {\n  @Input() order: Order;\n  book: Book;\n  needSpinner = true;\n  constructor(\n    private publisherService: PublishersService,\n    private booksService: BookService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    // console.log(this.order);\n    new Promise((resolve, reject) => {\n      this.booksService.returnBookById(this.order.bookId).subscribe((book) => {\n        resolve(book);\n      });\n    }).then((book: Book) => {\n      this.book = book;\n      this.needSpinner = false;\n    });\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <!-- <ion-buttons fxHide.lt-md slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"home\\\"></ion-menu-button>\\n    </ion-buttons> -->\\n    <ion-title slot=\\\"end\\\">ادمین </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"offers\\\">\\n    <ion-segment-button value=\\\"pubs\\\">\\n      <ion-label>ناشران</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"offers\\\">\\n      <ion-label>پیشنهاد ویژه </ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"sale-report\\\">\\n      <ion-label>گزارش فروش</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <section *ngIf=\\\"pageState==='pubs'\\\">\\n    <ion-list slot=\\\"end\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"8\\\" offsetMd=\\\"2\\\" offset=\\\"0\\\">\\n            <div *ngFor=\\\"let publisher of publishers\\\">\\n              <app-publisher-card [publisher]=\\\"publisher\\\"> </app-publisher-card>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-list>\\n  </section>\\n  <section *ngIf=\\\"pageState==='offers'\\\">\\n    <app-offers></app-offers>\\n  </section>\\n  <section *ngIf=\\\"pageState==='sale-report'\\\">\\n    <ion-spinner *ngIf=\\\"needSpinner\\\" name=\\\"dots\\\"></ion-spinner>\\n    <section *ngIf=\\\"!needSpinner\\\">\\n      <app-all-order-history\\n        *ngFor=\\\"let order of orders  | paginate: { itemsPerPage: 24, currentPage: paginationP }\\\"\\n        [order]=\\\"order\\\"\\n      ></app-all-order-history>\\n    </section>\\n    <section style=\\\"display: flex; justify-content: center\\\">\\n      <pagination-controls\\n        (pageChange)=\\\"paginationP = $event\\\"\\n        previousLabel=\\\" \\\"\\n        nextLabel=\\\" \\\"\\n        [autoHide]=\\\"true\\\"\\n        [responsive]=\\\"true\\\"\\n      >\\n      </pagination-controls>\\n    </section>\\n  </section>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { User } from '../user.model';\r\nimport { UIService } from './ui.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PublishersService {\r\n  publishers: User[] = [];\r\n  publisherEmitter = new BehaviorSubject<User[]>(null);\r\n\r\n  constructor(private afs: AngularFirestore, private uiService: UIService) {}\r\n\r\n  getAllPublishers() {\r\n    return this.afs\r\n      .collection<User>('User', (ref) => ref.where('status', '==', 'PUBLISHER'))\r\n      .valueChanges({ idField: 'id' });\r\n  }\r\n\r\n  changePublisherStatus(status: boolean, pubId: string) {\r\n    this.afs\r\n      .doc('User/' + pubId)\r\n      .update({ activatedStatus: status })\r\n      .then(() => {\r\n        if (status) {\r\n          this.uiService.presentToast('ناشر با موفقیت تایید شد ');\r\n        } else {\r\n          this.uiService.presentToast('ناشر با موفقیت مسدود شد ');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.uiService.presentToast('مشکلی در تغییر وضعیت ناشر وجود دارد ');\r\n        throw new Error(err);\r\n      });\r\n  }\r\n\r\n  returnPublisherById(pub: string) {\r\n    // let theId = this.publishers.findIndex((pub) => pub.id === id);\r\n    // return this.publishers[theId];\r\n    return this.afs\r\n      .collection<User>('User', (ref) =>\r\n        ref.where('name', '==', pub).where('status', '==', 'Publisher')\r\n      )\r\n      .valueChanges();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwdWJsaXNoZXItY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController } from '@ionic/angular';\nimport { Observable, Subscription } from 'rxjs';\nimport { Book } from 'src/app/shared/book.model';\nimport { Package } from 'src/app/shared/package.model';\nimport { BookService } from 'src/app/shared/services/books.service';\nimport { PackagesService } from 'src/app/shared/services/package.service';\nimport { UIService } from 'src/app/shared/services/ui.service';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss'],\n})\nexport class OffersComponent implements OnInit, OnDestroy {\n  // packages: Package[];\n  packages: Observable<Package[]>;\n  subs: Subscription[] = [];\n  paginationP = 1;\n  packageForm: FormGroup;\n  books: Book[];\n  editMode = false;\n  onEditPackage: Package = null;\n  nextPackageId: number;\n  imageEvent;\n  constructor(\n    private packagesService: PackagesService,\n    private bookService: BookService,\n    private uiService: UIService,\n    private loadingController: LoadingController\n  ) {}\n\n  ngOnInit() {\n    this.bookService.getAllBooks().subscribe(\n      (someBook) => {\n        this.books = someBook;\n      },\n      (error) => {\n        this.uiService.presentToast('مشکلی در دریافت لیست کتاب ها وجود دارد .');\n        throw new Error(error);\n      }\n    );\n    this.packages = new Observable<Package[]>((data) => {\n      this.packagesService.getAllPackages().subscribe((packages) => {\n        data.next(packages);\n      });\n    });\n\n    this.packageForm = new FormGroup({\n      id: new FormControl(null, Validators.required),\n      name: new FormControl(this.onEditPackage?.name, Validators.required),\n      imageUrl: new FormControl(\n        this.onEditPackage?.imageUrl,\n        Validators.required\n      ),\n      bookIdArray: new FormControl(\n        this.onEditPackage?.bookIdArray,\n        Validators.required\n      ),\n      description: new FormControl(\n        this.onEditPackage?.description,\n        Validators.required\n      ),\n    });\n  }\n\n  editPack(pid: string) {\n    this.loadingController\n      .create({ message: 'لطفا کمی صبر کنید' })\n      .then((wel) => {\n        wel.present();\n\n        this.editMode = true;\n        this.packagesService\n          .returnPackageById(pid)\n          .then((p: Package) => {\n            this.onEditPackage = p;\n            // console.log(this.onEditPackage);\n            this.packageForm.setValue({\n              id: this.onEditPackage.id,\n              name: this.onEditPackage.name,\n              imageUrl: this.onEditPackage.imageUrl,\n              bookIdArray: this.onEditPackage.bookIdArray,\n              description: this.onEditPackage.description,\n            });\n            wel.dismiss();\n          })\n          .catch((err) => {\n            wel.dismiss();\n            // console.log('err');\n            throw new Error(err);\n          });\n      });\n  }\n\n  onClearButton() {\n    this.packageForm.reset();\n    this.editMode = false;\n    this.onEditPackage = null;\n  }\n\n  onDeleteButton() {\n    this.packagesService.deletePackage(this.onEditPackage.id);\n    this.onClearButton();\n  }\n\n  onAddButton() {\n    this.loadingController\n      .create({ message: 'لطفا کمی صبر کنید' })\n      .then((wel) => {\n        wel.present();\n\n        this.packagesService\n          .uploadImage(this.imageEvent, this.packageForm.value.name)\n          .then((url) => {\n            this.packageForm.patchValue({ imageUrl: url });\n            this.packagesService.addPackage(this.packageForm.value);\n            this.uiService.presentToast('عکس با موفقیت اپلود شد ');\n            this.onClearButton();\n            wel.dismiss();\n          })\n          .catch((err) => {\n            this.uiService.presentToast('عکس با موفقیت اپلود نشد ');\n            wel.dismiss();\n            throw new Error(err);\n          });\n      });\n  }\n\n  uploadFile(event) {\n    this.imageEvent = event;\n  }\n\n  onUpdateButton() {\n    this.packagesService.updatePackage(this.packageForm.value);\n    this.onClearButton();\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach((sub) => sub.unsubscribe());\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvZmZlci1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Order } from '../shared/order.model';\nimport { OrderPaymentService } from '../shared/services/orderPayment.service';\nimport { PublishersService } from '../shared/services/publishers.service';\nimport { UIService } from '../shared/services/ui.service';\nimport { User } from '../shared/user.model';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.page.html',\n  styleUrls: ['./admin.page.scss'],\n})\nexport class AdminPage implements OnInit, OnDestroy {\n  pageState = 'offers';\n  subscriptions: Subscription[] = [];\n  publishers: User[];\n  needSpinner = true;\n  orders: Order[] = [];\n  paginationP = 1;\n  // orders;\n  constructor(\n    private publishersService: PublishersService,\n    private orderPayService: OrderPaymentService,\n    private uiService: UIService\n  ) {}\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.publishersService.getAllPublishers().subscribe(\n        (pubs) => {\n          this.publishers = pubs;\n        },\n        (error) => {\n          this.uiService.presentToast('مشکلی در دریافت لیست ناشران وجود دارد ');\n          throw new Error(error);\n        }\n      )\n    );\n\n    new Promise((resolve, reject) => {\n      this.orderPayService.getAllOrders().subscribe((order: Order[]) => {\n        resolve(order);\n      });\n    }).then((order: Order[]) => {\n      // console.log(order);\n      this.orders = order;\n      this.needSpinner = false;\n    });\n  }\n\n  segmentChanged(event: any) {\n    this.pageState = event.detail.value;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}